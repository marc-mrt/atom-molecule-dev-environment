"use babel";
// @flow

import type { DevTool } from "../../../ExecutionControlEpic/DevToolsSummaryFeature/Types/types";

export type PackageTesterResult =
  | (boolean | PackageInfo | Promise<boolean>)
  | false;

import type {
  GeneratedPlanObject,
} from "../../../ExecutionControlEpic/PlanConfigurationFeature/Types/types.js.flow";

export type PackageTester =
  | RegExp
  | string
  | ((packageName: string, directory: ?Directory) => PackageTesterResult);

export type PackageGenerator =
  (packageName: string) => Array<GeneratedPlanObject>;

export type Plugin = {
  tool: DevTool,
  isPackage?: PackageTester,
  generatePlansForPackage?: PackageGenerator
};

export type Directory = {
  name: string,
  files: Array<string | Directory>,
};

export type PackageInfo = {
  name: string,
  path: string,
  type: "file" | "directory",
};

export type Package = PackageInfo & {
  plugin: Plugin,
};

export type PackagesRefreshedAction = {
  type: "PACKAGES_REFRESHED",
  payload: {
    rootPath: string,
    packages: Array<Package>,
    plugins: Array<Plugin>,
  },
};

export type RefreshPackagesAction = {
  type: "REFRESH_PACKAGES",
  payload: {
    rootPath: string,
    plugins: Array<Plugin>,
  },
};

export type PackageRefreshCompletedAction = {
  type: "PACKAGE_REFRESH_COMPLETED",
  payload: {
    rootPath: string,
    actionCount: number,
  },
};
